
# IOTDF server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	
	ssl off;
	ssl_certificate /etc/nginx/ssl/cert.pem; #sm-lab.crt;
	ssl_certificate_key /etc/nginx/ssl/key.dec.pem; #sm-lab.deprotected.key;

	if ($ssl_protocol = "") {
#		rewrite ^ https://$host$request_uri? permanent;  # optional, to force use of HTTPS
	}


	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;

	server_name _;
	
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;

                auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd;


	}

	location ~ /\.ht {
		deny all;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
	}

	location /zeppelin { #for zeppelin
		rewrite ^/zeppelin/(.*)  /$1 break;
		proxy_pass http://127.0.0.1:8081;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;
		proxy_redirect off;
		
		auth_basic "Restricted";
		auth_basic_user_file /etc/nginx/.htpasswd;
		
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;

	}
	
	location /zeppelin/ws {  # For zeppelin websocket support
		rewrite ^/zeppelin/ws(.*) /ws$1 break;
		proxy_pass http://127.0.0.1:8081;
		proxy_http_version 1.1;
		proxy_set_header Upgrade websocket;
		proxy_set_header Connection upgrade;
		proxy_read_timeout 86400;
		
	}

	location /nifi {

		auth_basic "Restricted";
		auth_basic_user_file /etc/nginx/.htpasswd;

		proxy_pass http://127.0.0.1:8080/nifi;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_connect_timeout 1;
		proxy_send_timeout 30;
		proxy_read_timeout 30;
	}

	location /nifi-api {
		rewrite ^/nifi-api/(.*) /nifi-api/$1 break;
		proxy_pass http://127.0.0.1:8080;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

	}

	location /grafana/ {

		proxy_pass http://localhost:3000/;

    #            auth_basic "Restricted";
    #            auth_basic_user_file /etc/nginx/.htpasswd;

	}


}
